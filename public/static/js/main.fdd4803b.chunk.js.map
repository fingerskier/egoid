{"version":3,"sources":["utilities.js","Task/Add.js","Task/Edit.js","Task/Task.js","Task/List.js","Quest/Quest.js","Quest/Add.js","Quest/Children.js","App.js","reportWebVitals.js","index.js"],"names":["get","a","url_fragment","sessionStorage","loading","fetch","method","headers","response","json","console","error","post","url","data","body","JSON","stringify","put","Add","quest_id","name","useRef","useState","emotion","setEmotion","intellect","setIntellect","physique","setPhysique","social","setSocial","description","editable","setEditable","toggleEdit","onSubmit","event","preventDefault","current","value","then","log","onClick","className","placeholder","ref","type","onChange","target","min","max","step","id","setDescription","setName","useEffect","result","q","rowid","payload","Task","Edit","Tasks","setQuest","tasks","setTasks","map","el","Quest","setRowid","parent_id","title","Children","quests","setQuests","App","parent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdd4803b.chunk.js","sourcesContent":["async function del(url_fragment = '') {\r\n  sessionStorage.loading = true\r\n  \r\n  try {\r\n    const response = await fetch(url_fragment, {\r\n      method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    \r\n    sessionStorage.loading = false\r\n    return response.json()\r\n  } catch (error) {\r\n    sessionStorage.loading = false\r\n    console.error(error)\r\n    return false\r\n  }\r\n}\r\n\r\nasync function get(url_fragment = '') {\r\n  sessionStorage.loading = true\r\n  \r\n  try {\r\n    const response = await fetch(url_fragment, {\r\n      method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n    \r\n    sessionStorage.loading = false\r\n    return response.json()\r\n  } catch (error) {\r\n    sessionStorage.loading = false\r\n    console.error(error)\r\n    return false\r\n  }\r\n}\r\n\r\nasync function post(url = '', data = {}) {\r\n  sessionStorage.loading = true\r\n\r\n  try {\r\n    let body = JSON.stringify(data)\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      body: `${body}`,\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json' \r\n      },\r\n    });\r\n    \r\n    sessionStorage.loading = false\r\n    return await response.json()\r\n  } catch (error) {\r\n    sessionStorage.loading = false\r\n    console.error(error)\r\n    return false\r\n  }  \r\n}\r\n\r\nasync function put(url = '', data = {}) {\r\n  sessionStorage.loading = true\r\n\r\n  try {\r\n    \r\n    let body = JSON.stringify(data)\r\n    \r\n    const response = await fetch(url, {\r\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\r\n      body: `${body}`,\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json' \r\n      },\r\n    });\r\n    \r\n    sessionStorage.loading = false\r\n    return await response.json(); // parses JSON response into native JavaScript objects\r\n  } catch (error) {\r\n    sessionStorage.loading = false\r\n    console.error(error)\r\n    return false\r\n  }  \r\n}\r\n\r\nexport {del,get,post,put,}","import React,{useRef,useState} from 'react'\r\nimport {post,put} from \"../utilities\";\r\n\r\nfunction Add({quest_id}) {\r\n  const name = useRef(null)\r\n  const [emotion,setEmotion] = useState(0)\r\n  const [intellect,setIntellect] = useState(0)\r\n  const [physique,setPhysique] = useState(0)\r\n  const [social,setSocial] = useState(0)\r\n  const description = useRef(null)\r\n\r\n  const [editable, setEditable] = useState(false)\r\n\r\n  function save(event) {\r\n    event.preventDefault()\r\n    const payload = {\r\n      quest_id: quest_id,\r\n      name: name.current.value,\r\n      description: description.current.value,\r\n    }\r\n    \r\n    put('task', payload)\r\n    .then(()=>console.log('saved'))\r\n\r\n    toggleEdit()\r\n    return false\r\n  }\r\n\r\n  function toggleEdit() {\r\n    setEditable(!editable)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={save}>\r\n        <h3 onClick={toggleEdit}>Add a Task</h3>\r\n        <fieldset className={`${editable?'0':'invisible'}`}>\r\n          <input name=\"name\" placeholder=\"New Task\" ref={name} type=\"text\" />\r\n          <br/>\r\n          <textarea name=\"description\" placeholder=\"Description\" ref={description}></textarea>\r\n          <br/>\r\n          <label>\r\n            Emotion:&nbsp;\r\n            <input name=\"emotion\" onChange={event=>setEmotion(event.target.value)} value={emotion} type=\"range\" min=\"0\" max=\"3\" step=\"1\" />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Intellect:&nbsp;\r\n            <input name=\"intellect\" onChange={event=>setIntellect(event.target.value)} value={intellect} type=\"range\" min=\"0\" max=\"3\" step=\"1\" />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Physique:&nbsp;\r\n            <input name=\"physique\" onChange={event=>setPhysique(event.target.value)} value={physique} type=\"range\" min=\"0\" max=\"3\" step=\"1\" />\r\n          </label>\r\n          <br/>\r\n          <label>\r\n            Social:&nbsp;\r\n            <input name=\"social\" onChange={event=>setSocial(event.target.value)} value={social} type=\"range\" min=\"0\" max=\"3\" step=\"1\" />\r\n          </label>\r\n          <br/>\r\n\r\n          <br/>\r\n          <button>Add Task</button>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Add","import React,{useEffect,useRef,useState} from 'react'\r\nimport {get, post,put} from \"../utilities\";\r\n\r\nfunction Add({id}) {\r\n  const [description, setDescription] = useState('unk')\r\n  const [editable, setEditable] = useState(false)\r\n  const [emotion,setEmotion] = useState(0)\r\n  const [intellect,setIntellect] = useState(0)\r\n  const [name, setName] = useState('loading...')\r\n  const [physique,setPhysique] = useState(0)\r\n  const [rowid, setRowid] = useState(0)\r\n  const [social,setSocial] = useState(0)\r\n\r\n  useEffect(() => {\r\n    get(`task/${id}`)\r\n    .then(result=>{\r\n      const q = result[0]\r\n\r\n      if (q && (q.rowid === id)) {\r\n        setDescription(q.description)\r\n        setEmotion(q.emotion)\r\n        setIntellect(q.intellect)\r\n        setName(q.name)\r\n        setPhysique(q.physique)\r\n        setSocial(q.social)\r\n      }\r\n    })\r\n  }, [id])\r\n\r\n  function save(event) {\r\n    event.preventDefault()\r\n    const payload = {\r\n      name: name,\r\n      description: description,\r\n      emotion: emotion,\r\n      physique: physique,\r\n      social: social,\r\n      intellect: intellect,\r\n    }\r\n    \r\n    post(`task/${id}`, payload)\r\n\r\n    toggleEdit()\r\n    return false\r\n  }\r\n\r\n  function toggleEdit() {\r\n    setEditable(!editable)\r\n  }\r\n\r\n  function Weight({title,name,changer,value}) {\r\n    return <label>\r\n      {title}:&nbsp;\r\n      <input\r\n        name={name}\r\n        onChange={event=>changer(event.target.value)}\r\n        value={value}\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"3\"\r\n        step=\"1\"\r\n      />\r\n    </label>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={save}>\r\n        <input \r\n          name=\"name\"\r\n          placeholder=\"New Task\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={event=>setName(event.target.value)}\r\n        />\r\n        <br/>\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={event=>setDescription(event.target.value)}\r\n        ></textarea>\r\n        <br/>\r\n        <label>\r\n          Emotion:&nbsp;\r\n          <input\r\n            name=\"emotion\"\r\n            onChange={event=>setEmotion(event.target.value)}\r\n            value={emotion}\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"3\"\r\n            step=\"1\"\r\n          />\r\n        </label>\r\n        <br/>\r\n        <label>\r\n          Intellect:&nbsp;\r\n          <input\r\n            name=\"intellect\"\r\n            onChange={event=>setIntellect(event.target.value)} value={intellect} type=\"range\"\r\n            min=\"0\"\r\n            max=\"3\"\r\n            step=\"1\"\r\n          />\r\n        </label>\r\n        <br/>\r\n        <label>\r\n          Physique:&nbsp;\r\n          <input\r\n            name=\"physique\"\r\n            onChange={event=>setPhysique(event.target.value)} value={physique} type=\"range\"\r\n            min=\"0\"\r\n            max=\"3\"\r\n            step=\"1\"\r\n          />\r\n        </label>\r\n        <br/>\r\n        <label>\r\n          Social:&nbsp;\r\n          <input\r\n            name=\"social\"\r\n            onChange={event=>setSocial(event.target.value)} value={social} type=\"range\"\r\n            min=\"0\"\r\n            max=\"3\"\r\n            step=\"1\"\r\n          />\r\n        </label>\r\n        <br/>\r\n\r\n        <br/>\r\n        <button>Update Task</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Add","import React,{useEffect,useState} from 'react'\r\nimport { get } from '../utilities'\r\nimport Editor from \"./Edit\";\r\n\r\nfunction Task({id}) {\r\n  const [description, setDescription] = useState('unk')\r\n  const [editable, setEditable] = useState(false)\r\n  const [name, setName] = useState('loading...')\r\n\r\n  useEffect(() => {\r\n    get(`task/${id}`)\r\n    .then(result=>{\r\n      const q = result[0]\r\n\r\n      if (q) {\r\n        setDescription(q.description)\r\n        setName(q.name)\r\n      }\r\n    })\r\n  }, [id])\r\n  \r\n  function toggleEdit() {\r\n    setEditable(!editable)\r\n  }\r\n\r\n  return (\r\n    <div className=\"task\">\r\n      <h3 onClick={toggleEdit}>{name}</h3>\r\n      {editable\r\n        ?<Editor id={id} />\r\n\r\n        :<></>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React,{useEffect,useState} from 'react'\r\nimport {get} from '../utilities'\r\nimport AddTask from \"../Task/Add\";\r\nimport Task from \"../Task/Task\";\r\n\r\nfunction Tasks({quest_id=0}) {\r\n  const [quest, setQuest] = useState({name:'Top Level'})\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    console.log(quest_id)\r\n    get(`task/${quest_id}`)\r\n    .then(result=>{\r\n      let q = result[0]\r\n      if (!q) q = {name:'Top-Level'}\r\n      setQuest(q)\r\n      console.log('parent',q)\r\n    })\r\n    \r\n    get(`task/all/${quest_id}`)\r\n    .then(result=>setTasks(result))\r\n  }, [quest_id])\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      Tasks\r\n      <br/>\r\n      <AddTask quest_id={quest_id} />\r\n      {tasks.map(el=><div key={el.rowid}>\r\n        <hr/>\r\n        <Task id={el.rowid} />\r\n      </div>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks","import React,{useEffect,useRef,useState} from 'react'\r\nimport { get,post } from '../utilities'\r\nimport AddTask from \"../Task/Add\";\r\nimport Children from \"./Children\";\r\nimport Tasks from \"../Task/List\";\r\n\r\nfunction Quest({id}) {\r\n  const [children, setChildren] = useState([])\r\n  const [description, setDescription] = useState('loading...')\r\n  const [editable, setEditable] = useState(false)\r\n  const [rowid, setRowid] = useState(-7)\r\n  const [name, setName] = useState('loading...')\r\n  \r\n  useEffect(() => {\r\n    get(`quest/${id}`)\r\n    .then(result=>{\r\n      const q = result[0]\r\n      console.log(`quest/${id}`,q)\r\n      if (q) {\r\n        setRowid(q.rowid)\r\n        setName(q.name)\r\n        setDescription(q.description)\r\n      }\r\n    })\r\n  }, [id])\r\n\r\n  function toggleEdit() {\r\n    setEditable(!editable)\r\n  }\r\n\r\n  function save(event) {\r\n    event.preventDefault()\r\n    post(`quest/${id}`, {\r\n      name: name,\r\n      description: description,\r\n    })\r\n    toggleEdit()\r\n    return false\r\n  }\r\n  \r\n  return (\r\n    <div className=\"quest\">\r\n      <form onSubmit={save}>\r\n        <h1 onClick={toggleEdit}>{name}, {id}</h1>\r\n        <fieldset className={`${editable?'0':'invisible'}`}>\r\n          <input\r\n            name=\"rowid\"\r\n            type=\"hidden\"\r\n            value={rowid} \r\n            />\r\n          <br/>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={event=>setName(event.target.value)}\r\n            />\r\n          <br/>\r\n          <textarea\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={event=>setDescription(event.target.value)}\r\n            ></textarea>\r\n          <br/>\r\n          <button>Save Quest</button>\r\n        </fieldset>\r\n      </form>\r\n\r\n      {editable\r\n        ? <div>\r\n          <Children id={id} />\r\n          <Tasks quest_id={id} />\r\n        </div>\r\n        : <></>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quest","import React,{useEffect,useRef,useState} from 'react'\r\nimport {put} from '../utilities'\r\n\r\nfunction Add({parent_id=0}) {\r\n  const description = useRef(null)\r\n  const name = useRef(null)\r\n  \r\n  const [editable, setEditable] = useState(false)\r\n\r\n  const title = parent_id ? 'Add Sub-Quest' : 'Add Quest Line'\r\n  \r\n  function save(event) {\r\n    event.preventDefault()\r\n    \r\n    const data = {\r\n      description: description.current.value,\r\n      name: name.current.value,\r\n      parent_id: parent_id,\r\n    }\r\n    \r\n    put('quest', data)\r\n    \r\n    return false\r\n  }\r\n  \r\n  function toggleEdit() {\r\n    setEditable(!editable)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={save}>\r\n        <h2 onClick={toggleEdit}>{title}</h2>\r\n\r\n        <fieldset className={`${editable?'0':'invisible'}`}>\r\n          <input ref={name} placeholder=\"New Quest\" />\r\n          <br/>\r\n          <textarea ref={description} placeholder=\"Description\"></textarea>\r\n          <br/>\r\n          <button>Save</button>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Add","import React,{useEffect,useState} from 'react'\r\nimport {get} from \"../utilities\";\r\nimport Quest from \"./Quest\";\r\nimport AddQuest from \"./Add\";\r\n\r\nfunction Children({id}) {\r\n  const [quests, setQuests] = useState([])\r\n    \r\n  useEffect(() => {\r\n    get(`quest/all/${id}`)\r\n    .then(result=>{\r\n      setQuests(result)\r\n    })\r\n  }, [id])\r\n\r\n  return (\r\n    <div className=\"children\">\r\n      <AddQuest parent_id={id} />\r\n      {quests.map(el=><div key={el.rowid}>\r\n        <h3></h3>\r\n        <Quest\r\n          id={el.rowid}\r\n          name={el.name}\r\n        />\r\n      </div>)}      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Children","import React,{useEffect,useRef,useState} from 'react'\r\nimport './App.css';\r\nimport {get} from './utilities'\r\nimport Quests from \"./Quest/Children\";\r\n\r\nfunction App() {\r\n  const [parent, setParent] = useState(0)\r\n  const [quests, setQuests] = useState([])\r\n  const selection = useState(0)\r\n\r\n  useEffect(() => {\r\n    get(`quest/parents`)\r\n    .then(result=>{\r\n      console.log('quests',result)\r\n      setQuests(result)\r\n    })\r\n    \r\n    return () => {\r\n      setQuests([])\r\n    }\r\n  }, [parent])\r\n\r\n  function selectParent(event) {\r\n    setParent(+event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Egoid</h1>\r\n\r\n      <Quests id={0} />\r\n      \r\n      {/* \r\n      <select value={parent} onChange={selectParent}>\r\n        <option value=\"-1\">None</option>\r\n        <option value=\"0\">Top-Level</option>\r\n        {quests.map(el=><option key={el.rowid} val={el.rowid}>{el.name}</option>)}\r\n      </select> \r\n      */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}